{"version":3,"sources":["registerServiceWorker.js","components/UIElements/Avatar.js","components/UIElements/Card.js","components/UserItem.js","components/UsersList.js","components/UIElements/Backdrop.js","components/UIElements/Modal.js","components/FormElements/Button.js","components/UIElements/ErrorModal.js","components/UIElements/LoadingSpinner.js","pages/Users.js","components/utils/validators.js","components/FormElements/Input.js","components/hooks/form-hook.js","components/context/auth-context.js","components/FormElements/ImageUpload.js","pages/NewTrip.js","components/UIElements/Map.js","components/TripItem.js","components/TripList.js","pages/UserTrips.js","components/Navigation/MainHeader.js","components/Navigation/NavLinks.js","components/Navigation/SideDrawer.js","components/Navigation/MainNav.js","pages/UpdateTrips.js","pages/Auth.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","id","name","tripCount","to","process","UsersList","items","length","map","user","key","trips","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","e","preventDefault","contentClass","footerClass","footer","Modal","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","LoadingSpinner","asOverlay","Users","useState","isLoading","setIsLoading","setError","loadedUsers","setLoadedUsers","useEffect","a","fetch","response","json","responseData","ok","Error","message","users","sendRequest","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","AuthContext","createContext","isLoggedIn","token","userId","login","logout","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","event","pickedFile","fileIsValid","files","center","current","click","NewTrip","auth","useContext","title","description","address","weather","flies","date","InputHandler","history","useHistory","tripSubmitHandler","formData","FormData","append","method","body","headers","Authorization","push","Map","mapRef","zoom","google","maps","Marker","position","TripItem","creatorId","coordinates","onDelete","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMap","cancelDeleteHandler","confirmDeleteWarningHandler","moment","Date","add","format","TripList","trip","creator","onDeleteTrip","UserTrips","useParams","userid","loadedTrips","setLoadedTrips","fetchTrips","deletedTripId","prevTrips","filter","MainHeader","NavLinks","SideDrawer","aside","ReactDom","MainNav","drawerIsOpen","setDrawerIsOpen","closeDrawer","UpdateTrip","tripId","pid","loadedTrip","setLoadedTrip","setFormData","fetchTrip","tripUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","inputHandler","authSubmitHandler","undefined","prevMode","App","routes","setToken","setUserId","localStorage","setItem","removeItem","storedData","parse","getItem","path","UpdateTrips","Provider","render","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wjBAUMA,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DA6BR,SAASC,EAAgBC,GACrBC,UAAUC,cACLC,SAASH,GACTI,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbT,UAAUC,cAAcS,WAKxBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAM/BC,OAAM,SAAAC,GACHH,QAAQG,MAAM,4CAA6CA,M,uDCtDxDC,G,MAZA,SAAAC,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEC,IAAKH,EAAMI,MACXC,IAAKL,EAAMK,IACXH,MAAO,CAAEI,MAAON,EAAMM,MAAOC,OAAQP,EAAMM,YCEpCE,G,MARF,SAAAR,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMS,YCkBEC,G,MAnBE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIP,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACjC,OACI,wBAAIZ,UAAU,aACV,kBAAC,EAAD,CAAMA,UAAU,sBACZ,kBAAC,IAAD,CAAMa,GAAE,WAAMH,EAAN,WACJ,yBAAKV,UAAU,oBACX,kBAAC,EAAD,CAAQG,MAAK,UAAKW,yCAAL,YAAwCX,GAASC,IAAKO,KAEvE,yBAAKX,UAAU,mBACX,4BAAKW,GACL,4BAAKC,EAAL,IAA+B,IAAdA,EAAkB,OAAS,eCerDG,G,MA1BG,SAAChB,GACf,OAA2B,IAAvBA,EAAMiB,MAAMC,OAER,yBAAKjB,UAAU,UACX,kBAAC,EAAD,KACI,mDAOZ,wBAAIA,UAAU,cACTD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACjB,kBAAC,EAAD,CACIC,IAAKD,EAAKT,GACVA,GAAIS,EAAKT,GACTP,MAAOgB,EAAKhB,MACZQ,KAAMQ,EAAKR,KACXC,UAAWO,EAAKE,MAAMJ,e,QCZ3BK,G,MAPE,SAAAvB,GACf,OAAOwB,IAASC,aACd,yBAAKxB,UAAU,WAAWyB,QAAS1B,EAAM0B,UACzCC,SAASC,eAAe,oBCFtBC,G,MAAe,SAAC7B,GAClB,IAAM8B,EACF,yBAAK7B,UAAS,gBAAWD,EAAMC,WAAaC,MAAOF,EAAME,OACrD,4BAAQD,UAAS,wBAAmBD,EAAM+B,cACtC,4BAAK/B,EAAMgC,SAEf,0BAAMC,SAAUjC,EAAMiC,SAAWjC,EAAMiC,SAAW,SAACC,GAAD,OAAOA,EAAEC,mBACvD,yBAAKlC,UAAS,yBAAoBD,EAAMoC,eACnCpC,EAAMS,UAEX,4BAAQR,UAAS,wBAAmBD,EAAMqC,cACrCrC,EAAMsC,UAKvB,OACId,IAASC,aAAaK,EAASH,SAASC,eAAe,iBAuBhDW,EAlBD,SAACvC,GACX,OACI,oCACKA,EAAMwC,MAAQ,kBAAC,EAAD,CAAUd,QAAS1B,EAAMyC,WACxC,kBAACC,EAAA,EAAD,CACIC,GAAI3C,EAAMwC,KACVI,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEX,kBAAC,EAAiB/C,MCGnBgD,G,MArCA,SAAAhD,GACb,OAAIA,EAAMiD,KAEN,uBACEhD,UAAS,yBAAoBD,EAAMkD,MAAQ,UAAlC,YAA+ClD,EAAMmD,SAC5D,kBADO,YACcnD,EAAMoD,QAAU,kBACvCH,KAAMjD,EAAMiD,MAEXjD,EAAMS,UAITT,EAAMc,GAEN,kBAAC,IAAD,CACEA,GAAId,EAAMc,GACVuC,MAAOrD,EAAMqD,MACbpD,UAAS,yBAAoBD,EAAMkD,MAAQ,UAAlC,YAA+ClD,EAAMmD,SAC5D,kBADO,YACcnD,EAAMoD,QAAU,mBAEtCpD,EAAMS,UAKX,4BACER,UAAS,yBAAoBD,EAAMkD,MAAQ,UAAlC,YAA+ClD,EAAMmD,SAC5D,kBADO,YACcnD,EAAMoD,QAAU,kBACvCE,KAAMtD,EAAMsD,KACZ5B,QAAS1B,EAAM0B,QACf6B,SAAUvD,EAAMuD,UAEfvD,EAAMS,YCnBE+C,EAbI,SAAAxD,GACjB,OACE,kBAAC,EAAD,CACEyC,SAAUzC,EAAMyD,QAChBzB,OAAO,qBACPQ,OAAQxC,EAAMF,MACdwC,OAAQ,kBAAC,EAAD,CAAQZ,QAAS1B,EAAMyD,SAAvB,SAER,2BAAIzD,EAAMF,SCDD4D,G,MARQ,SAAA1D,GACrB,OACE,yBAAKC,UAAS,UAAKD,EAAM2D,WAAa,6BACpC,yBAAK1D,UAAU,qBC0CN2D,EA5CD,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,OAEUF,qBAFV,mBAET/D,EAFS,KAEFkE,EAFE,OAGsBH,qBAHtB,mBAGTI,EAHS,KAGIC,EAHJ,KAMhBC,qBAAU,YACW,uCAAG,8BAAAC,EAAA,6DAChBL,GAAa,GADG,kBAGWM,MAAM,GAAD,OAAItD,6CAAJ,WAHhB,cAGNuD,EAHM,gBAKeA,EAASC,OALxB,UAKNC,EALM,OAOPF,EAASG,GAPF,uBAQF,IAAIC,MAAMF,EAAaG,SARrB,QAUZT,EAAeM,EAAaI,OAVhB,kDAYZb,GAAa,GACbC,EAAS,KAAIW,SAbD,QAehBZ,GAAa,GAfG,0DAAH,qDAiBjBc,KACD,IAMH,OACI,oCACI,kBAAC,EAAD,CAAY/E,MAAOA,EAAO2D,QANb,WACjBO,EAAS,SAMJF,GACG,yBAAK7D,UAAU,UACX,kBAAC,EAAD,QAGN6D,GAAaG,GAAe,kBAAC,EAAD,CAAWhD,MAAOgD,M,QClC/Ca,EAAsB,SAAAC,GAAG,MAAK,CACzCzB,KAV+B,YAW/ByB,IAAKA,IAUMC,EAAW,SAACC,EAAOC,GAC9B,IAAIC,GAAU,EAD+B,uBAE7C,YAAwBD,EAAxB,+CAAoC,CAAC,IAA1BE,EAAyB,QAxBP,YAyBvBA,EAAU9B,OACZ6B,EAAUA,GAAWF,EAAMI,OAAOnE,OAAS,GAzBhB,cA2BzBkE,EAAU9B,OACZ6B,EAAUA,GAAWF,EAAMI,OAAOnE,QAAUkE,EAAUL,KA3B3B,cA6BzBK,EAAU9B,OACZ6B,EAAUA,GAAWF,EAAMI,OAAOnE,QAAUkE,EAAUL,KA7BjC,QA+BnBK,EAAU9B,OACZ6B,EAAUA,IAAYF,GAASG,EAAUL,KA/BpB,QAiCnBK,EAAU9B,OACZ6B,EAAUA,IAAYF,GAASG,EAAUL,KAjClB,UAmCrBK,EAAU9B,OACZ6B,EAAUA,GAAW,iBAAiBG,KAAKL,KAnBF,kFAsB7C,OAAOE,GCxCHI,G,MAAe,SAAC9F,EAAO+F,GACzB,OAAQA,EAAOlC,MACX,IAAK,SACD,OAAO,eACA7D,EADP,CAEIwF,MAAOO,EAAOT,IACdI,QAASH,EAASQ,EAAOT,IAAKS,EAAON,cAE7C,IAAK,QACD,OAAO,eACAzF,EADP,CAEIgG,WAAW,IAEnB,QACI,OAAOhG,KAgEJiG,EA3DD,SAAC1F,GAAW,IAAD,EACU2F,qBAAWJ,EAAc,CACpDN,MAAOjF,EAAM4F,cAAgB,GAC7BH,WAAW,EACXN,QAASnF,EAAM6F,eAAgB,IAJd,mBACdC,EADc,KACFC,EADE,KAObpF,EAAgBX,EAAhBW,GAAIqF,EAAYhG,EAAZgG,QACJf,EAAmBa,EAAnBb,MAAOE,EAAYW,EAAZX,QAEfhB,qBAAU,WACN6B,EAAQrF,EAAIsE,EAAOE,KAEpB,CAACxE,EAAIqF,EAASf,EAAOE,IAExB,IAAMc,EAAgB,SAAC/D,GACnB6D,EAAS,CACLzC,KAAM,SACNyB,IAAK7C,EAAEgE,OAAOjB,MACdC,WAAYlF,EAAMkF,cAIpBiB,EAAe,WACjBJ,EAAS,CACLzC,KAAM,WAKR8C,EAA4B,UAAlBpG,EAAMoG,QAClB,2BACIzF,GAAIX,EAAMW,GACV2C,KAAMtD,EAAMsD,KACZ+C,YAAarG,EAAMqG,YACnBC,SAAUL,EACVM,OAAQJ,EACRlB,MAAOa,EAAWb,QAGlB,8BACItE,GAAIX,EAAMW,GACV6F,KAAMxG,EAAMwG,MAAQ,EACpBF,SAAUL,EACVM,OAAQJ,EACRlB,MAAOa,EAAWb,QAI9B,OACI,yBAAKhF,UAAS,wBAAmB6F,EAAWX,SAAWW,EAAWL,WAAa,0BAC3E,2BAAOgB,QAASzG,EAAMW,IAAKX,EAAM0G,OAChCN,GACCN,EAAWX,SAAWW,EAAWL,WAAa,2BAAIzF,EAAM2G,a,QC1EhEC,EAAc,SAACnH,EAAO+F,GACxB,OAAQA,EAAOlC,MACX,IAAK,eACD,IAAIuD,GAAc,EAClB,IAAK,IAAMC,KAAWrH,EAAMsH,OACnBtH,EAAMsH,OAAOD,KAIdD,EADAC,IAAYtB,EAAOsB,QACLD,GAAerB,EAAOL,QAEtB0B,GAAepH,EAAMsH,OAAOD,GAAS3B,SAG3D,OAAO,eACA1F,EADP,CAEIsH,OAAO,eACAtH,EAAMsH,OADP,eAEDvB,EAAOsB,QAAU,CACd7B,MAAOO,EAAOP,MACdE,QAASK,EAAOL,WAGxBA,QAAS0B,IAEjB,IAAK,WACD,MAAO,CACHE,OAAQvB,EAAOuB,OACf5B,QAASK,EAAOqB,aAExB,QACI,OAAOpH,IAKNuH,EAAU,SAACC,EAAeC,GAAyB,IAAD,EAC7BvB,qBAAWiB,EAAa,CAClDG,OAAQE,EACR9B,QAAS+B,IAH8C,mBACpDC,EADoD,KACzCpB,EADyC,KAwB3D,MAAO,CAACoB,EAlBaC,uBAAY,SAACzG,EAAIsE,EAAOE,GACzCY,EAAS,CACLzC,KAAM,eACN2B,MAAOA,EACPE,QAASA,EACT2B,QAASnG,MAEd,IAEiByG,uBAAY,SAACC,EAAWC,GACxCvB,EAAS,CACLzC,KAAM,WACNyD,OAAQM,EACRR,YAAaS,MAGlB,MC1DMC,EAAcC,wBAAc,CACrCC,YAAY,EACZC,MAAO,KACPC,OAAQ,KACRC,MAAO,aACPC,OAAQ,eC6DGC,G,MAhEK,SAAC9H,GAAW,IAAD,EACH6D,qBADG,mBACpBkE,EADoB,KACdC,EADc,OAESnE,qBAFT,mBAEpBoE,EAFoB,KAERC,EAFQ,OAGGrE,oBAAS,GAHZ,mBAGpBsB,EAHoB,KAGXgD,EAHW,KAKrBC,EAAgBC,mBAEtBlE,qBAAU,WACN,GAAK4D,EAAL,CAIA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAChBN,EAAcI,EAAWG,SAE7BH,EAAWI,cAAcX,MAG1B,CAACA,IAsBJ,OACI,yBAAK9H,UAAU,gBACX,2BACIqD,KAAK,OACL3C,GAAIX,EAAMW,GACVgI,IAAKP,EACLlI,MAAO,CAAE0I,QAAS,QAClBC,OAAO,oBACPvC,SA5BU,SAACwC,GACnB,IAAIC,EACAC,EAAc7D,EACd2D,EAAM5C,OAAO+C,OAAuC,IAA9BH,EAAM5C,OAAO+C,MAAM/H,QACzC6H,EAAaD,EAAM5C,OAAO+C,MAAM,GAChCjB,EAAQe,GACRZ,GAAW,GACXa,GAAc,IAEdb,GAAW,GACXa,GAAc,GAGlBhJ,EAAMgG,QAAQhG,EAAMW,GAAIoI,EAAYC,MAiBhC,yBAAK/I,UAAS,sBAAiBD,EAAMkJ,QAAU,WAC3C,yBAAKjJ,UAAU,yBACVgI,GAAc,yBAAK9H,IAAK8H,EAAY5H,IAAI,aACvC4H,GAAc,0DAGxB,kBAAC,EAAD,CAAQ3E,KAAK,SAAS5B,QApBL,WACrB0G,EAAce,QAAQC,UAmBlB,iBACEjE,GAAW,2BAAInF,EAAM2G,cCuFpB0C,G,MAzIC,WACZ,IAAMC,EAAOC,qBAAWhC,GADN,EAEQ1D,oBAAS,GAFjB,mBAEX/D,EAFW,KAEJkE,EAFI,OAGgBH,oBAAS,GAHzB,mBAGXC,EAHW,KAGAC,EAHA,OAIgBiD,EAAQ,CACtCwC,MAAO,CACHvE,MAAO,GACPE,SAAS,GAEbsE,YAAa,CACTxE,MAAO,GACPE,SAAS,GAEbuE,QAAS,CACLzE,MAAO,GACPE,SAAS,GAEbwE,QAAS,CACL1E,MAAO,GACPE,SAAS,GAEbyE,MAAO,CACH3E,MAAO,GACPE,SAAS,GAEb0E,KAAM,CACF5E,MAAO,GACPE,SAAS,GAEb/E,MAAO,CACH6E,MAAO,KACPE,SAAS,KAEd,GAjCe,mBAIXgC,EAJW,KAIA2C,EAJA,KAoCZC,EAAUC,cAEVC,EAAiB,uCAAG,WAAOnB,GAAP,eAAA1E,EAAA,6DACtB0E,EAAM3G,iBACN4B,GAAa,IACPmG,EAAW,IAAIC,UACZC,OAAO,QAASjD,EAAUJ,OAAOyC,MAAMvE,OAChDiF,EAASE,OAAO,cAAejD,EAAUJ,OAAO0C,YAAYxE,OAC5DiF,EAASE,OAAO,UAAWjD,EAAUJ,OAAO2C,QAAQzE,OACpDiF,EAASE,OAAO,UAAWjD,EAAUJ,OAAO4C,QAAQ1E,OACpDiF,EAASE,OAAO,QAASjD,EAAUJ,OAAO6C,MAAM3E,OAChDiF,EAASE,OAAO,OAAQjD,EAAUJ,OAAO8C,KAAK5E,OAC9CiF,EAASE,OAAO,QAASjD,EAAUJ,OAAO3G,MAAM6E,OAGhDtF,QAAQC,IAAImB,8CAbU,oBAeZsD,MAAM,GAAD,OAAItD,6CAAJ,UAA+C,CACtDsJ,OAAQ,OACRC,KAAMJ,EACNK,QAAS,CACLC,cAAe,UAAYlB,EAAK5B,SAnBtB,QAuBlBqC,EAAQU,KAAK,KAvBK,mDAyBlB1G,GAAa,GACbC,EAAS,KAAIW,SAAW,oCA1BN,QA6BtBZ,GAAa,GA7BS,2DAAH,sDAqCvB,OACI,oCACI,kBAAC,EAAD,CAAYjE,MAAOA,EAAO2D,QAPb,WACjBO,EAAS,SAOJF,GAAa,kBAAC,EAAD,CAAgBH,WAAS,IACvC,0BAAM1D,UAAU,YAAYgC,SAAUgI,GAClC,kBAAC,EAAD,CACItJ,GAAG,QACHyF,QAAQ,QACR9C,KAAK,OACLoD,MAAM,QACNxB,WAAY,CLzFQ,CAAE5B,KARX,YKkGXqD,UAAU,mBACVX,QAAS8D,IAEb,kBAAC,EAAD,CACInJ,GAAG,cACHyF,QAAQ,WACRM,MAAM,cACNxB,WAAY,CAACJ,EAAoB,IACjC6B,UAAU,yBACVX,QAAS8D,IAEb,kBAAC,EAAD,CACInJ,GAAG,UACHyF,QAAQ,QACRM,MAAM,eACNxB,WAAY,CLzGQ,CAAE5B,KARX,YKkHXqD,UAAU,4BACVX,QAAS8D,IAEb,kBAAC,EAAD,CACInJ,GAAG,UACHyF,QAAQ,QACRM,MAAM,qBACNxB,WAAY,CLjHQ,CAAE5B,KARX,YK0HXqD,UAAU,0BACVX,QAAS8D,IAEb,kBAAC,EAAD,CACInJ,GAAG,QACHyF,QAAQ,QACRM,MAAM,aACNxB,WAAY,CLzHQ,CAAE5B,KARX,YKkIXqD,UAAU,uBACVX,QAAS8D,IAEb,kBAAC,EAAD,CACInJ,GAAG,OACHyF,QAAQ,QACRM,MAAM,YACNpD,KAAK,OACL4B,WAAY,CLlIQ,CAAE5B,KARX,YK2IXqD,UAAU,oBACVX,QAAS8D,IAEb,kBAAC,EAAD,CAAanJ,GAAG,QAAQqF,QAAS8D,EAAcnD,UAAU,+BACzD,kBAAC,EAAD,CAAQrD,KAAK,SAASC,UAAW4D,EAAUhC,SAA3C,gBCjHDuF,G,MA3BH,SAAC1K,GACT,IAAM2K,EAAStC,mBAEPa,EAAiBlJ,EAAjBkJ,OAAQ0B,EAAS5K,EAAT4K,KAahB,OAXAzG,qBAAU,WACN,IAAMhD,EAAM,IAAIzC,OAAOmM,OAAOC,KAAKJ,IAAIC,EAAOxB,QAAS,CACnDD,OAAQA,EACR0B,KAAMA,IAGV,IAAIlM,OAAOmM,OAAOC,KAAKC,OAAO,CAAEC,SAAU9B,EAAQ/H,IAAKA,MAExD,CAAC+H,EAAQ0B,IAIR,yBACIjC,IAAKgC,EACL1K,UAAS,cAASD,EAAMC,WACxBC,MAAOF,EAAME,U,iBCoFV+K,G,MA9FE,SAAC,GAAwG,IAAtG7K,EAAqG,EAArGA,MAAOoJ,EAA8F,EAA9FA,MAAOE,EAAuF,EAAvFA,QAASD,EAA8E,EAA9EA,YAAaE,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,MAAOjJ,EAAiD,EAAjDA,GAAIuK,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,SAAUvB,EAAW,EAAXA,KACpGP,EAAOC,qBAAWhC,GAD6F,EAGvF1D,oBAAS,GAH8E,mBAG9GwH,EAH8G,KAGrGC,EAHqG,OAIrEzH,oBAAS,GAJ4D,mBAI9G0H,EAJ8G,KAI5FC,EAJ4F,OAK3F3H,oBAAS,GALkF,mBAK9G/D,EAL8G,KAKvGkE,EALuG,OAMnFH,oBAAS,GAN0E,mBAM9GC,EAN8G,KAMnGC,EANmG,KAS/G0H,EAAW,kBAAMH,GAAW,IAE5BI,EAAsB,kBAAMF,GAAoB,IAEhDG,EAA2B,uCAAG,sBAAAvH,EAAA,6DAChCoH,GAAoB,GADY,kBAItBnH,MAAM,GAAD,OAAItD,6CAAJ,kBAA+CJ,GAAM,CAC5D0J,OAAQ,SACRE,QAAS,CACLC,cAAe,UAAYlB,EAAK5B,SAPZ,OAU5B0D,EAASzK,GAVmB,gDAY5BoD,GAAa,GACbC,EAAS,KAAIW,SAbe,yDAAH,qDAsBjC,OACI,oCACI,kBAAC,EAAD,CAAY7E,MAAOA,EAAO2D,QANb,WACjBO,EAAS,SAML,kBAAC,EAAD,CACIxB,KAAM6I,EACN5I,SAAUgJ,EACVzJ,OAAQ0H,EACRtH,aAAa,2BACbC,YAAY,2BACZC,OAAQ,kBAAC,EAAD,CAAQZ,QAAS+J,GAAjB,UAER,yBAAKxL,UAAU,iBACX,kBAAC,EAAD,CACIiJ,OAAQiC,EACRP,KAAM,OAIlB,kBAAC,EAAD,CACIpI,KAAM+I,EACN9I,SAAUiJ,EACV1J,OAAO,iBACPK,YAAY,2BACZC,OACI,oCACI,kBAAC,EAAD,CAAQa,SAAO,EAACzB,QAASgK,GAAzB,UACA,kBAAC,EAAD,CAAQtI,QAAM,EAAC1B,QAASiK,GAAxB,YAIR,oFAEJ,wBAAI1L,UAAU,aACV,kBAAC,EAAD,CAAMA,UAAU,sBACX6D,GAAa,kBAAC,EAAD,CAAgBH,WAAS,IACvC,yBAAK1D,UAAU,oBACX,yBAAKA,UAAU,SAASE,IAAG,UAAKY,yCAAL,YAAwCX,GAASC,IAAKmJ,KAErF,yBAAKvJ,UAAU,mBACX,4BAAKuJ,GACL,4BAAKE,GACL,4BAAKkC,IAAO,IAAIC,KAAKhC,IAAOiC,IAAI,EAAG,QAAQC,OAAO,uBACjDzC,EAAK3B,QAAU,2BAAG,2CAAoBgC,GACtCL,EAAK3B,QAAU,2BAAG,4CAAqB8B,GACvCH,EAAK3B,QAAU,2BAAG,2CAAoBiC,IAI3C,yBAAK3J,UAAU,sBACX,kBAAC,EAAD,CAAQkD,SAAO,EAACzB,QA5EpB,kBAAM4J,GAAW,KA4Eb,eACChC,EAAK3B,SAAWuD,GAAa,kBAAC,EAAD,CAAQpK,GAAE,iBAAYH,IAAtB,QAC7B2I,EAAK3B,SAAWuD,GAAa,kBAAC,EAAD,CAAQ9H,QAAM,EAAC1B,QA5EhC,kBAAM8J,GAAoB,KA4ET,gBC9DvCQ,G,MA/BE,SAAChM,GACd,OAA2B,IAAvBA,EAAMiB,MAAMC,OACL,yBAAKjB,UAAU,oBAClB,kBAAC,EAAD,KACI,iDACA,kBAAC,EAAD,CAAQa,GAAG,cAAX,gBAML,wBAAIb,UAAU,aAChBD,EAAMiB,MAAME,KAAI,SAAA8K,GAAI,OAAI,kBAAC,EAAD,CACrB5K,IAAK4K,EAAKtL,GACVA,GAAIsL,EAAKtL,GACTP,MAAO6L,EAAK7L,MACZoJ,MAAOyC,EAAKzC,MACZK,KAAMoC,EAAKpC,KACXF,QAASsC,EAAKtC,QACdC,MAAOqC,EAAKrC,MACZH,YAAawC,EAAKxC,YAClBC,QAASuC,EAAKvC,QACdwB,UAAWe,EAAKC,QAChBf,YAAac,EAAKtN,SAClByM,SAAUpL,EAAMmM,qBCgCbC,EAtDG,WACd,IAAMzE,EAAS0E,cAAYC,OADP,EAEMzI,oBAAS,GAFf,mBAEb/D,EAFa,KAENkE,EAFM,OAGcH,oBAAS,GAHvB,mBAGbC,EAHa,KAGFC,EAHE,OAIkBF,qBAJlB,mBAIb0I,EAJa,KAIAC,EAJA,KAMpBrI,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACfL,GAAa,GADE,kBAGYM,MAAM,GAAD,OAAItD,6CAAJ,uBAAoD4G,IAHrE,cAGLrD,EAHK,gBAKgBA,EAASC,OALzB,UAKLC,EALK,OAONF,EAASG,GAPH,uBAQD,IAAIC,MAAMF,EAAaG,SARtB,QAUX6H,EAAehI,EAAalD,OAVjB,kDAaXyC,GAAa,GACbC,EAAS,KAAIW,SAdF,QAgBfZ,GAAa,GAhBE,0DAAH,qDAmBhB0I,KAED,IAWH,OACI,oCACI,kBAAC,EAAD,CAAY3M,MAAOA,EAAO2D,QAXb,WACjBO,EAAS,SAWJF,GACG,yBAAK7D,UAAU,UACX,kBAAC,EAAD,QAGN6D,GAAayI,GAAe,kBAAC,EAAD,CAAUtL,MAAOsL,EAAaJ,aAbzC,SAACO,GACxBF,GAAe,SAAAG,GAAS,OAAIA,EAAUC,QAAO,SAAAX,GAAI,OAAIA,EAAKtL,KAAO+L,aCjC1DG,G,MAPI,SAAC7M,GAChB,OAAO,4BAAQC,UAAU,eACpBD,EAAMS,YCyBAqM,G,MAxBE,SAAC9M,GACd,IAAMsJ,EAAOC,qBAAWhC,GAExB,OAAO,wBAAItH,UAAU,aACjB,4BACI,kBAAC,IAAD,CAASa,GAAG,IAAIuC,OAAK,GAArB,cAEHiG,EAAK7B,YAAc,4BAChB,kBAAC,IAAD,CAAS3G,GAAE,WAAMwI,EAAK3B,OAAX,WAAX,aAEH2B,EAAK7B,YAAc,4BAChB,kBAAC,IAAD,CAAS3G,GAAG,cAAZ,cAEFwI,EAAK7B,YAAc,4BACjB,kBAAC,IAAD,CAAS3G,GAAG,SAAZ,UAEHwI,EAAK7B,YAAc,4BAChB,4BAAQ/F,QAAS4H,EAAKzB,QAAtB,cCDGkF,G,MAhBI,SAAC/M,GAChB,IAAMgN,EACF,kBAACtK,EAAA,EAAD,CACIC,GAAI3C,EAAMwC,KACVM,QAAS,IACTC,WAAW,gBACXH,cAAY,EACZC,eAAa,GAEb,2BAAO5C,UAAU,cAAcyB,QAAS1B,EAAM0B,SAAU1B,EAAMS,WAItE,OAAOwM,IAASxL,aAAauL,EAAOrL,SAASC,eAAe,kBCsBjDsL,G,MAjCC,SAAClN,GAAW,IAAD,EACiB6D,oBAAS,GAD1B,mBAChBsJ,EADgB,KACFC,EADE,KAIjBC,EAAc,kBAAMD,GAAgB,IAG1C,OACI,oCACKD,GAAgB,kBAAC,EAAD,CAAUzL,QAAS2L,IACpC,kBAAC,EAAD,CAAY7K,KAAM2K,EAAczL,QAAS2L,GACrC,yBAAKpN,UAAU,+BACX,kBAAC,EAAD,QAGR,kBAAC,EAAD,KACI,4BAAQA,UAAU,4BAA4ByB,QAbvC,kBAAM0L,GAAgB,KAczB,+BACA,+BACA,gCAEJ,wBAAInN,UAAU,0BAEV,kBAAC,IAAD,CAAMa,GAAG,KAAT,aAEJ,yBAAKb,UAAU,+BACX,kBAAC,EAAD,WCmKLqN,EAvLI,WACf,IAAMC,EAASlB,cAAYmB,IADN,EAEa3J,oBAAS,GAFtB,mBAEdC,EAFc,KAEHC,EAFG,OAGKF,qBAHL,mBAGd/D,EAHc,KAGPkE,EAHO,OAIeH,qBAJf,mBAId4J,EAJc,KAIFC,EAJE,KAKf3D,EAAUC,cACVV,EAAOC,qBAAWhC,GANH,EAU0BP,EAAQ,CACnDwC,MAAO,CACHvE,MAAO,GACPE,SAAS,GAEbsE,YAAa,CACTxE,MAAO,GACPE,SAAS,GAEbwE,QAAS,CACL1E,MAAO,GACPE,SAAS,GAEbyE,MAAO,CACH3E,MAAO,GACPE,SAAS,GAEb0E,KAAM,CACF5E,MAAO,GACPE,SAAS,KAEd,GA/BkB,mBAUdgC,EAVc,KAUH2C,EAVG,KAUW6D,EAVX,KAkCrBxJ,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAEaC,MAAM,GAAD,OAAItD,6CAAJ,kBAA+CwM,IAFjE,cAEJjJ,EAFI,gBAIiBA,EAASC,OAJ1B,UAIJC,EAJI,OAMLF,EAASG,GANJ,sBAOA,IAAIC,MAAMF,EAAaG,SAPvB,OASV+I,EAAclJ,EAAayH,MAE3B0B,EAAY,CACRnE,MAAO,CACHvE,MAAOT,EAAayH,KAAKzC,MACzBrE,SAAS,GAEbsE,YAAa,CACTxE,MAAOT,EAAayH,KAAKxC,YACzBtE,SAAS,GAEbwE,QAAS,CACL1E,MAAOT,EAAayH,KAAKtC,QACzBxE,SAAS,GAEbyE,MAAO,CACH3E,MAAOT,EAAayH,KAAKrC,SAE9B,GA3BO,kDA+BV7F,GAAa,GACbC,EAAS,KAAIW,SAhCH,0DAAH,qDAqCfiJ,KAED,IAEH,IAAMC,EAAuB,uCAAG,WAAO/E,GAAP,SAAA1E,EAAA,6DAC5B0E,EAAM3G,iBADsB,kBAIlBkC,MAAM,GAAD,OAAItD,6CAAJ,kBAA+CwM,GAAU,CAChElD,OAAQ,QACRC,KAAMwD,KAAKC,UAAU,CACjBvE,MAAOrC,EAAUJ,OAAOyC,MAAMvE,MAC9BwE,YAAatC,EAAUJ,OAAO0C,YAAYxE,MAC1C0E,QAASxC,EAAUJ,OAAO4C,QAAQ1E,MAClC2E,MAAOzC,EAAUJ,OAAO6C,MAAM3E,QAElCsF,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAYlB,EAAK5B,SAdhB,OAkBxBqC,EAAQU,KAAK,IAAMnB,EAAK3B,OAAS,UAlBT,gDAoBxB5D,GAAa,GACbC,EAAS,KAAIW,SArBW,yDAAH,sDA4B7B,GAAIb,EACA,OACI,yBAAK7D,UAAU,UACX,kBAAC,EAAD,OAKZ,IAAKwN,IAAe3N,EAChB,OACI,yBAAKG,UAAU,UACX,kBAAC,EAAD,KACI,oDAUhB,OACI,oCACI,kBAAC,EAAD,CAAYH,MAAOA,EAAO2D,QANb,WACjBO,EAAS,UAMHF,GAAa2J,GACX,0BAAMxN,UAAU,YAAYgC,SAAU4L,GAClC,kBAAC,EAAD,CACIlN,GAAG,QACHyF,QAAQ,QACR9C,KAAK,OACLoD,MAAM,QACNxB,WAAY,Cd9II,CAAE5B,KARX,YcuJPqD,UAAU,0BACVX,QAAS8D,EACTlE,aAAc6H,EAAWjE,MACzB3D,cAAc,IAElB,kBAAC,EAAD,CACIlF,GAAG,cACHyF,QAAQ,WACRM,MAAM,cACNxB,WAAY,CAACJ,EAAoB,IACjC6B,UAAU,gCACVX,QAAS8D,EACTlE,aAAc6H,EAAWhE,YACzB5D,cAAc,IAElB,kBAAC,EAAD,CACIlF,GAAG,UACHyF,QAAQ,QACR9C,KAAK,OACLoD,MAAM,qBACNxB,WAAY,CdnKI,CAAE5B,KARX,Yc4KPqD,UAAU,0BACVX,QAAS8D,EACTlE,aAAc6H,EAAW9D,QACzB9D,cAAc,IAElB,kBAAC,EAAD,CACIlF,GAAG,QACHyF,QAAQ,QACR9C,KAAK,OACLoD,MAAM,aACNxB,WAAY,Cd9KI,CAAE5B,KARX,YcuLPqD,UAAU,uBACVX,QAAS8D,EACTlE,aAAc6H,EAAW7D,MACzB/D,cAAc,IAElB,kBAAC,EAAD,CAAQvC,KAAK,SAASC,UAAW4D,EAAUhC,SAA3C,kBCpBL6I,G,MA5JF,WACT,IAAM1E,EAAOC,qBAAWhC,GADT,EAEuB1D,oBAAS,GAFhC,mBAERoK,EAFQ,KAEKC,EAFL,OAGmBrK,oBAAS,GAH5B,mBAGRC,EAHQ,KAGGC,EAHH,OAIWF,oBAAS,GAJpB,mBAIR/D,EAJQ,KAIDkE,EAJC,OAKgCgD,EAAQ,CACnDmH,MAAO,CACHlJ,MAAO,GACPE,SAAS,GAEbiJ,SAAU,CACNnJ,MAAO,GACPE,SAAS,KAGd,GAfY,mBAKRgC,EALQ,KAKGkH,EALH,KAKiBV,EALjB,KA6CTW,EAAiB,uCAAG,WAAOxF,GAAP,uBAAA1E,EAAA,yDACtB0E,EAAM3G,iBACN4B,GAAa,IAETkK,EAJkB,0CAMS5J,MAAM,GAAD,OAAItD,6CAAJ,gBAAqD,CAC7EsJ,OAAQ,OACRE,QAAS,CACL,eAAgB,oBAEpBD,KAAMwD,KAAKC,UAAU,CACjBI,MAAOhH,EAAUJ,OAAOoH,MAAMlJ,MAC9BmJ,SAAUjH,EAAUJ,OAAOqH,SAASnJ,UAb9B,cAMRX,EANQ,gBAiBaA,EAASC,OAjBtB,UAiBRC,EAjBQ,OAkBTF,EAASG,GAlBA,uBAmBJ,IAAIC,MAAMF,EAAaG,SAnBnB,QAqBdZ,GAAa,GACbuF,EAAK1B,MAAMpD,EAAamD,OAAQnD,EAAakD,OAtB/B,kDAwBd3D,GAAa,GACbC,EAAS,KAAIW,SAAW,oCAzBV,kDA8BRuF,EAAW,IAAIC,UACZC,OAAO,QAASjD,EAAUJ,OAAOoH,MAAMlJ,OAChDiF,EAASE,OAAO,OAAQjD,EAAUJ,OAAOnG,KAAKqE,OAC9CiF,EAASE,OAAO,WAAYjD,EAAUJ,OAAOqH,SAASnJ,OACtDiF,EAASE,OAAO,QAASjD,EAAUJ,OAAO3G,MAAM6E,OAlClC,UAoCSZ,MAAM,GAAD,OAAItD,6CAAJ,iBAAsD,CAC9EuJ,KAAMJ,EACNG,OAAQ,SAtCE,eAoCR/F,EApCQ,iBAyCaA,EAASC,OAzCtB,WAyCRC,EAzCQ,OA0CTF,EAASG,GA1CA,uBA2CJ,IAAIC,MAAMF,EAAaG,SA3CnB,QA6CdZ,GAAa,GACbuF,EAAK1B,MAAMpD,EAAamD,OAAQnD,EAAakD,OA9C/B,mDAgDd3D,GAAa,GACbC,EAAS,KAAIW,SAAW,oCAjDV,kEAAH,sDA0DvB,OACI,oCACI,kBAAC,EAAD,CAAY7E,MAAOA,EAAO2D,QANb,WACjBO,EAAS,SAML,kBAAC,EAAD,CAAM/D,UAAU,kBACX6D,GAAa,kBAAC,EAAD,CAAgBH,WAAS,IACvC,8CACA,6BACA,0BAAM1B,SAAUqM,IACVL,GACE,kBAAC,EAAD,CACI7H,QAAQ,QACRzF,GAAG,OACH2C,KAAK,OACLoD,MAAM,mBACNxB,WAAY,CfzHA,CAAE5B,KARX,YekIHqD,UAAU,6CACVX,QAASqI,KAIfJ,GAAe,kBAAC,EAAD,CAAa/E,QAAM,EAACvI,GAAI,QAASqF,QAASqI,EAAc1H,UAAU,+BAEnF,kBAAC,EAAD,CACIP,QAAQ,QACRzF,GAAG,QACH2C,KAAK,QACLoD,MAAM,QACNxB,WAAY,Cf1HE,CAAE5B,KAfX,Ue0ILqD,UAAU,8BACVX,QAASqI,IAGb,kBAAC,EAAD,CACIjI,QAAQ,QACRzF,GAAG,WACH2C,KAAK,WACLoD,MAAM,WACNxB,WAAY,CAACJ,EAAoB,IACjC6B,UAAU,yCACVX,QAASqI,IAEb,kBAAC,EAAD,CAAQ/K,KAAK,SAASC,UAAW4D,EAAUhC,SACtC8I,EAAc,QAAU,WAGjC,kBAAC,EAAD,CAAQ9K,SAAO,EAACzB,QAnIF,WACjBuM,EASDN,EAAY,eAEDxG,EAAUJ,OAFV,CAGHnG,KAAM,CACFqE,MAAO,GACPE,SAAS,GAEb/E,MAAO,CACH6E,MAAO,KACPE,SAAS,MAGjB,GApBJwI,EAAY,eAEDxG,EAAUJ,OAFV,CAGHnG,UAAM2N,EACNnO,WAAOmO,IAEXpH,EAAUJ,OAAOoH,MAAMhJ,SAAWgC,EAAUJ,OAAOqH,SAASjJ,SAiBpE+I,GAAe,SAAAM,GAAQ,OAAKA,OA0GpB,aACeP,EAAc,SAAW,aChEzCQ,EAtFH,WAAO,IA0BbC,EA1BY,EACU7K,oBAAS,GADnB,mBACT6D,EADS,KACFiH,EADE,OAEY9K,oBAAS,GAFrB,mBAET8D,EAFS,KAEDiH,EAFC,KAKVhH,EAAQR,uBAAY,SAACO,EAAQD,GACjCiH,EAASjH,GACTkH,EAAUjH,GACVkH,aAAaC,QAAQ,WAAYhB,KAAKC,UAAU,CAAEpG,OAAQA,EAAQD,MAAOA,OACxE,IAEGG,EAAST,uBAAY,WACzBuH,EAAS,MACTC,EAAU,MACVC,aAAaE,WAAW,cACvB,IAmDH,OAjDA5K,qBAAU,WACR,IAAM6K,EAAalB,KAAKmB,MAAMJ,aAAaK,QAAQ,aAE/CF,GAAcA,EAAWtH,OAC3BE,EAAMoH,EAAWrH,OAAQqH,EAAWtH,SAErC,CAACE,IAOF8G,EAFEhH,EAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrE,OAAK,EAAC8L,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAO9L,OAAK,EAAC8L,KAAK,kBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAO9L,OAAK,EAAC8L,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAO9L,OAAK,EAAC8L,KAAK,eAChB,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAUtO,GAAG,OAMf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuC,OAAK,EAAC8L,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAO9L,OAAK,EAAC8L,KAAK,kBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAO9L,OAAK,EAAC8L,KAAK,SAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUrO,GAAG,WAOjB,kBAACyG,EAAY8H,SAAb,CAAsBpK,MACpB,CACEwC,aAAcC,EACdA,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,8BACG6G,MCjFXlN,IAAS8N,OAAO,kBAAC,EAAD,MAAS3N,SAASC,eAAe,S5BWlC,WACX,GAA6C,kBAAmB5C,UAAW,CAGvE,GADkB,IAAIuQ,IAAIxO,GAAwBrC,OAAOC,UAC3C6Q,SAAW9Q,OAAOC,SAAS6Q,OAIrC,OAGJ9Q,OAAO+Q,iBAAiB,QAAQ,WAC5B,IAAM1Q,EAAK,UAAMgC,GAAN,sBAENvC,EAwCjB,SAAiCO,GAE7BsF,MAAMtF,GACDI,MAAK,SAAAmF,GAGsB,MAApBA,EAASoL,SACuD,IAAhEpL,EAASiG,QAAQoF,IAAI,gBAAgBC,QAAQ,cAG7C5Q,UAAUC,cAAc4Q,MAAM1Q,MAAK,SAAAC,GAC/BA,EAAa0Q,aAAa3Q,MAAK,WAC3BT,OAAOC,SAASoR,eAKxBjR,EAAgBC,MAGvBc,OAAM,WACHF,QAAQC,IACJ,oEAzDAoQ,CAAwBjR,GAHxBD,EAAgBC,O4B1BhCkR,M","file":"static/js/main.eb7ea68f.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\"New content is available; please refresh.\");\n                        } else {\n                            // At this point, everything has been pre-cached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../components/UIElements/Avatar';\nimport Card from '../components/UIElements/Card';\nimport './UserItem.css'\n\nconst UserItem = ({ id, image, name, tripCount }) => {\n    return (\n        <li className='user-item'>\n            <Card className='user-item__content'>\n                <Link to={`/${id}/trips`} >\n                    <div className='user-item__image'>\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${image}`} alt={name} />\n                    </div>\n                    <div className='user-item__info'>\n                        <h2>{name}</h2>\n                        <h3>{tripCount} {tripCount === 1 ? 'Trip' : 'Trips'}</h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    )\n\n};\n\nexport default UserItem;","import React from 'react';\nimport UserItem from './UserItem';\nimport Card from '../components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = (props) => {\n    if (props.items.length === 0) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No users found...</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className='users-list'>\n            {props.items.map(user => (\n                <UserItem\n                    key={user.id}\n                    id={user.id}\n                    image={user.image}\n                    name={user.name}\n                    tripCount={user.trips.length}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default UsersList;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Backdrop from './Backdrop';\nimport './Modal.css'\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    )\n    return (\n        ReactDOM.createPortal(content, document.getElementById('modal-hook'))\n    )\n\n}\n\nconst Modal = (props) => {\n    return (\n        <>\n            {props.show && <Backdrop onClick={props.onCancel} />}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames='modal'\n            >\n                <ModalOverlay {...props} />\n            </CSSTransition>\n        </>\n    )\n\n}\n\nexport default Modal;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../components/UIElements/ErrorModal';\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\n\nconst Users = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const [loadedUsers, setLoadedUsers] = useState();\n\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`);\n\n                const responseData = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setLoadedUsers(responseData.users);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            setIsLoading(false);\n        };\n        sendRequest();\n    }, []);\n\n    const errorHandler = () => {\n        setError(null)\n    }\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </>\n    );\n};\n\nexport default Users;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { validate } from '../utils/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            };\n        default:\n            return state;\n    }\n\n}\n\nconst Input = (props) => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '',\n        isTouched: false,\n        isValid: props.initialValid || false\n    });\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n\n    }, [id, onInput, value, isValid])\n\n    const changeHandler = (e) => {\n        dispatch({\n            type: 'CHANGE',\n            val: e.target.value,\n            validators: props.validators\n        })\n    }\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH',\n        })\n\n    }\n\n    const element = props.element === 'input' ? (\n        <input\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n        />\n    ) : (\n            <textarea\n                id={props.id}\n                rows={props.rows || 3}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n            />\n        )\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    )\n\n}\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: {\n                        value: action.value,\n                        isValid: action.isValid\n                    }\n                },\n                isValid: formIsValid\n            };\n        case \"SET_DATA\":\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const InputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n\n        })\n    }, []);\n\n    return [formState, InputHandler, setFormData];\n\n\n\n}","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    token: null,\n    userId: null,\n    login: () => { },\n    logout: () => { }\n});","import React, { useRef, useState, useEffect } from 'react';\nimport './ImageUpload.css';\nimport Button from './Button';\n\nconst ImageUpload = (props) => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result)\n        };\n        fileReader.readAsDataURL(file);\n\n\n    }, [file])\n\n    const pickedHandler = (event) => {\n        let pickedFile\n        let fileIsValid = isValid\n        if (event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n\n        props.onInput(props.id, pickedFile, fileIsValid)\n    }\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click()\n    }\n\n    return (\n        <div className='form-control'>\n            <input\n                type='file'\n                id={props.id}\n                ref={filePickerRef}\n                style={{ display: 'none' }}\n                accept='.jpg, .png, .jpeg'\n                onChange={pickedHandler}\n            />\n            <div className={`imageUpload ${props.center && 'center'}`}>\n                <div className='image-upload__preview'>\n                    {previewUrl && <img src={previewUrl} alt='preview' />}\n                    {!previewUrl && <p>Please upload an image...</p>}\n                </div>\n            </div>\n            <Button type='button' onClick={pickImageHandler}>SELECT IMAGE</Button>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n\n    );\n};\n\nexport default ImageUpload;","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../components/FormElements/Input';\nimport Button from '../components/FormElements/Button';\nimport ErrorModal from '../components/UIElements/ErrorModal';\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../components/utils/validators';\nimport { useForm } from '../components/hooks/form-hook';\nimport { AuthContext } from '../components/context/auth-context';\nimport ImageUpload from '../components/FormElements/ImageUpload';\nimport './FormTrip.css';\n\nconst NewTrip = () => {\n    const auth = useContext(AuthContext);\n    const [error, setError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [formState, InputHandler] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        },\n        address: {\n            value: '',\n            isValid: false\n        },\n        weather: {\n            value: '',\n            isValid: false\n        },\n        flies: {\n            value: '',\n            isValid: false\n        },\n        date: {\n            value: '',\n            isValid: false\n        },\n        image: {\n            value: null,\n            isValid: false\n        }\n    }, false);\n\n\n    const history = useHistory();\n\n    const tripSubmitHandler = async (event) => {\n        event.preventDefault();\n        setIsLoading(true);\n        const formData = new FormData();\n        formData.append('title', formState.inputs.title.value)\n        formData.append('description', formState.inputs.description.value)\n        formData.append('address', formState.inputs.address.value)\n        formData.append('weather', formState.inputs.weather.value)\n        formData.append('flies', formState.inputs.flies.value)\n        formData.append('date', formState.inputs.date.value)\n        formData.append('image', formState.inputs.image.value)\n        // formData.append('creator', auth.userId)\n\n        console.log(process.env.REACT_APP_BACKEND_URL)\n        try {\n            await fetch(`${process.env.REACT_APP_BACKEND_URL}/trips`, {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: 'Bearer ' + auth.token\n                }\n            })\n            // return the user to starting page after logging a trip\n            history.push('/');\n        } catch (err) {\n            setIsLoading(false);\n            setError(err.message || 'Something went wrong, try again.')\n\n        }\n        setIsLoading(false);\n    };\n\n    const errorHandler = () => {\n        setError(null);\n    };\n\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && <LoadingSpinner asOverlay />}\n            <form className='trip-form' onSubmit={tripSubmitHandler}>\n                <Input\n                    id='title'\n                    element='input'\n                    type='text'\n                    label='Title'\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText='Enter a title...'\n                    onInput={InputHandler}\n                />\n                <Input\n                    id='description'\n                    element='textarea'\n                    label='Description'\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText='Enter a description...'\n                    onInput={InputHandler}\n                />\n                <Input\n                    id='address'\n                    element='input'\n                    label='Nearest Town'\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText='Enter the nearest town...'\n                    onInput={InputHandler}\n                />\n                <Input\n                    id='weather'\n                    element='input'\n                    label='Weather Conditions'\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText='Describe the weather...'\n                    onInput={InputHandler}\n                />\n                <Input\n                    id='flies'\n                    element='input'\n                    label='Flies Used'\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText='What flies worked...'\n                    onInput={InputHandler}\n                />\n                <Input\n                    id='date'\n                    element='input'\n                    label='Trip Date'\n                    type='date'\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText='Enter the date...'\n                    onInput={InputHandler}\n                />\n                <ImageUpload id='image' onInput={InputHandler} errorText=\"Please provide an image...\" />\n                <Button type='submit' disabled={!formState.isValid} >ADD TRIP</Button>\n            </form>\n        </>\n    );\n};\n\nexport default NewTrip;","import React, { useRef, useEffect } from 'react';\nimport './Map.css';\n\nconst Map = (props) => {\n    const mapRef = useRef();\n\n    const { center, zoom } = props;\n\n    useEffect(() => {\n        const map = new window.google.maps.Map(mapRef.current, {\n            center: center,\n            zoom: zoom\n        });\n\n        new window.google.maps.Marker({ position: center, map: map })\n\n    }, [center, zoom])\n\n\n    return (\n        <div\n            ref={mapRef}\n            className={`map ${props.className}`}\n            style={props.style}\n        >\n        </div>\n    )\n\n}\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\nimport Card from './UIElements/Card';\nimport Button from './FormElements/Button';\nimport Modal from './UIElements/Modal';\nimport Map from './UIElements/Map';\nimport ErrorModal from '../components/UIElements/ErrorModal';\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\nimport { AuthContext } from './context/auth-context'\nimport moment from 'moment';\n// import { tz } from 'moment-timezone';\n// import moment from 'react-moment';\nimport './TripItem.css'\n\nconst TripItem = ({ image, title, address, description, weather, flies, id, creatorId, coordinates, onDelete, date }) => {\n    const auth = useContext(AuthContext);\n\n    const [showMap, setShowMap] = useState(false);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const [error, setError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const openMap = () => setShowMap(true);\n    const closeMap = () => setShowMap(false);\n    const showDeleteWarningHandler = () => setShowConfirmModal(true);\n    const cancelDeleteHandler = () => setShowConfirmModal(false);\n\n    const confirmDeleteWarningHandler = async () => {\n        setShowConfirmModal(false);\n\n        try {\n            await fetch(`${process.env.REACT_APP_BACKEND_URL}/trips/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    Authorization: 'Bearer ' + auth.token\n                }\n            });\n            onDelete(id);\n        } catch (err) {\n            setIsLoading(false);\n            setError(err.message);\n\n        }\n    };\n\n    const errorHandler = () => {\n        setError(null);\n    };\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            <Modal\n                show={showMap}\n                onCancel={closeMap}\n                header={address}\n                contentClass='trip-item__modal-content'\n                footerClass='trip-item__modal-actions'\n                footer={<Button onClick={closeMap} >CLOSE</Button>}\n            >\n                <div className='map-container'>\n                    <Map\n                        center={coordinates}\n                        zoom={16}\n                    />\n                </div>\n            </Modal>\n            <Modal\n                show={showConfirmModal}\n                onCancel={cancelDeleteHandler}\n                header='Confirm Delete'\n                footerClass='trip-item__modal-actions'\n                footer={\n                    <>\n                        <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n                        <Button danger onClick={confirmDeleteWarningHandler}>DELETE</Button>\n                    </>\n                }\n            >\n                <p>You are deleting this trip. Click DELETE to confirm.</p>\n            </Modal>\n            <li className='trip-item'>\n                <Card className='trip-item__content'>\n                    {isLoading && <LoadingSpinner asOverlay />}\n                    <div className='trip-item__image'>\n                        <img className='center' src={`${process.env.REACT_APP_ASSET_URL}/${image}`} alt={title} />\n                    </div>\n                    <div className='trip-item__info'>\n                        <h2>{title}</h2>\n                        <h3>{address}</h3>\n                        <h4>{moment(new Date(date)).add(1, 'days').format('dddd, MMMM Do YYYY')}</h4>\n                        {auth.userId && <p><b>Conditions: </b>{weather}</p>}\n                        {auth.userId && <p><b>Description: </b>{description}</p>}\n                        {auth.userId && <p><b>Flies Used: </b>{flies}</p>}\n\n\n                    </div>\n                    <div className='trip-item__actions'>\n                        <Button inverse onClick={openMap}>VIEW ON MAP</Button>\n                        {auth.userId === creatorId && <Button to={`/trips/${id}`}>EDIT</Button>}\n                        {auth.userId === creatorId && <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>}\n                    </div>\n                </Card>\n            </li>\n        </>\n    )\n}\n\nexport default TripItem;","import React from 'react';\nimport Card from './UIElements/Card';\nimport TripItem from './TripItem';\nimport Button from './FormElements/Button';\nimport './TripList.css';\n\nconst TripList = (props) => {\n    if (props.items.length === 0) {\n        return <div className='trip-list center'>\n            <Card>\n                <h2>No trips found...</h2>\n                <Button to='/trips/new'>Log a Trip</Button>\n            </Card>\n\n        </div>\n    }\n\n    return <ul className='trip-list'>\n        {props.items.map(trip => <TripItem\n            key={trip.id}\n            id={trip.id}\n            image={trip.image}\n            title={trip.title}\n            date={trip.date}\n            weather={trip.weather}\n            flies={trip.flies}\n            description={trip.description}\n            address={trip.address}\n            creatorId={trip.creator}\n            coordinates={trip.location}\n            onDelete={props.onDeleteTrip}\n\n        />)}\n    </ul>\n\n}\n\nexport default TripList;","import React, { useState, useEffect } from 'react';\nimport TripList from '../components/TripList';\nimport { useParams } from 'react-router-dom';\nimport ErrorModal from '../components/UIElements/ErrorModal';\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\n\n\n\nconst UserTrips = () => {\n    const userId = useParams().userid;\n    const [error, setError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadedTrips, setLoadedTrips] = useState();\n\n    useEffect(() => {\n        const fetchTrips = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/trips/user/${userId}`);\n\n                const responseData = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(responseData.message)\n                }\n                setLoadedTrips(responseData.trips);\n\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            setIsLoading(false);\n\n        }\n        fetchTrips();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const errorHandler = () => {\n        setError(null);\n    }\n\n    const TripDeletedHandler = (deletedTripId) => {\n        setLoadedTrips(prevTrips => prevTrips.filter(trip => trip.id !== deletedTripId))\n\n    }\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && (\n                <div className='center'>\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedTrips && <TripList items={loadedTrips} onDeleteTrip={TripDeletedHandler} />}\n\n        </>\n    )\n};\n\n\nexport default UserTrips;","import React from 'react';\nimport './MainHeader.css';\n\nconst MainHeader = (props) => {\n    return <header className='main-header'>\n        {props.children}\n    </header>\n\n}\n\nexport default MainHeader;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../context/auth-context';\n\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n    const auth = useContext(AuthContext);\n\n    return <ul className='nav-links'>\n        <li>\n            <NavLink to='/' exact>ALL USERS</NavLink>\n        </li>\n        {auth.isLoggedIn && <li>\n            <NavLink to={`/${auth.userId}/trips`}>MY TRIPS</NavLink>\n        </li>}\n        {auth.isLoggedIn && <li>\n            <NavLink to='/trips/new'>NEW TRIP</NavLink>\n        </li>}\n        {!auth.isLoggedIn && <li>\n            <NavLink to='/auth'>LOGIN</NavLink>\n        </li>}\n        {auth.isLoggedIn && <li>\n            <button onClick={auth.logout}>LOGOUT</button>\n        </li>}\n    </ul>\n\n\n}\n\nexport default NavLinks;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport './SideDrawer.css';\n\n\nconst SideDrawer = (props) => {\n    const aside = (\n        <CSSTransition\n            in={props.show}\n            timeout={200}\n            classNames='slide-in-left'\n            mountOnEnter\n            unmountOnExit\n        >\n            <aside className='side-drawer' onClick={props.onClick}>{props.children}</aside>\n        </CSSTransition>\n    )\n\n    return ReactDom.createPortal(aside, document.getElementById('drawer-hook'))\n}\n\nexport default SideDrawer;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNav.css'\n\nconst MainNav = (props) => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n    const openDrawer = () => setDrawerIsOpen(true);\n    const closeDrawer = () => setDrawerIsOpen(false);\n\n\n    return (\n        <>\n            {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\n                <nav className='main-navigation__drawer-nav'>\n                    <NavLinks />\n                </nav>\n            </SideDrawer>\n            <MainHeader>\n                <button className='main-navigation__menu-btn' onClick={openDrawer}>\n                    <span />\n                    <span />\n                    <span />\n                </button>\n                <h1 className='main-navigation__title'>\n                    {/* <Link to='/'>Fishbook</Link> */}\n                    <Link to='/'>fishbook</Link>\n                </h1>\n                <nav className='main-navigation__header-nav'>\n                    <NavLinks />\n                </nav>\n            </MainHeader>\n        </>\n    )\n}\n\nexport default MainNav;","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Input from '../components/FormElements/Input';\nimport Button from '../components/FormElements/Button';\nimport Card from '../components/UIElements/Card';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../components/utils/validators';\nimport { useForm } from '../components/hooks/form-hook';\nimport ErrorModal from '../components/UIElements/ErrorModal';\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../components/context/auth-context';\nimport './FormTrip.css';\n\n\n\nconst UpdateTrip = () => {\n    const tripId = useParams().pid;\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const [loadedTrip, setLoadedTrip] = useState();\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n\n\n\n    const [formState, InputHandler, setFormData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        },\n        weather: {\n            value: '',\n            isValid: false\n        },\n        flies: {\n            value: '',\n            isValid: false\n        },\n        date: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n\n    useEffect(() => {\n        const fetchTrip = async () => {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/trips/${tripId}`);\n\n                const responseData = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(responseData.message)\n                }\n                setLoadedTrip(responseData.trip)\n\n                setFormData({\n                    title: {\n                        value: responseData.trip.title,\n                        isValid: true\n                    },\n                    description: {\n                        value: responseData.trip.description,\n                        isValid: true\n                    },\n                    weather: {\n                        value: responseData.trip.weather,\n                        isValid: true\n                    },\n                    flies: {\n                        value: responseData.trip.flies,\n                    }\n                }, true)\n\n\n            } catch (err) {\n                setIsLoading(false)\n                setError(err.message)\n\n            }\n\n        }\n        fetchTrip()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const tripUpdateSubmitHandler = async (event) => {\n        event.preventDefault();\n\n        try {\n            await fetch(`${process.env.REACT_APP_BACKEND_URL}/trips/${tripId}`, {\n                method: 'PATCH',\n                body: JSON.stringify({\n                    title: formState.inputs.title.value,\n                    description: formState.inputs.description.value,\n                    weather: formState.inputs.weather.value,\n                    flies: formState.inputs.flies.value\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.token\n\n                }\n            });\n            history.push('/' + auth.userId + '/trips')\n        } catch (err) {\n            setIsLoading(false);\n            setError(err.message)\n\n        }\n\n\n    };\n\n    if (isLoading) {\n        return (\n            <div className='center'>\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if (!loadedTrip && !error) {\n        return (\n            <div className='center'>\n                <Card>\n                    <h2>Trip was not found</h2>\n                </Card>\n            </div>\n        )\n    }\n\n    const errorHandler = () => {\n        setError(null);\n    }\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {!isLoading && loadedTrip && (\n                <form className='trip-form' onSubmit={tripUpdateSubmitHandler}>\n                    <Input\n                        id='title'\n                        element='input'\n                        type='text'\n                        label='Title'\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText='Please enter a title...'\n                        onInput={InputHandler}\n                        initialValue={loadedTrip.title}\n                        initialValid={true}\n                    />\n                    <Input\n                        id='description'\n                        element='textarea'\n                        label='Description'\n                        validators={[VALIDATOR_MINLENGTH(5)]}\n                        errorText='Please enter a description...'\n                        onInput={InputHandler}\n                        initialValue={loadedTrip.description}\n                        initialValid={true}\n                    />\n                    <Input\n                        id='weather'\n                        element='input'\n                        type='text'\n                        label='Weather Conditions'\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText='Describe the weather...'\n                        onInput={InputHandler}\n                        initialValue={loadedTrip.weather}\n                        initialValid={true}\n                    />\n                    <Input\n                        id='flies'\n                        element='input'\n                        type='text'\n                        label='Flies Used'\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText='What flies worked...'\n                        onInput={InputHandler}\n                        initialValue={loadedTrip.flies}\n                        initialValid={true}\n                    />\n                    <Button type='submit' disabled={!formState.isValid} >\n                        UPDATE TRIP</Button>\n                </form>\n            )}\n        </>\n\n    )\n}\n\nexport default UpdateTrip;","import React, { useState, useContext } from 'react';\nimport Card from '../components/UIElements/Card';\nimport Input from '../components/FormElements/Input';\nimport Button from '../components/FormElements/Button';\nimport ErrorModal from '../components/UIElements/ErrorModal';\nimport LoadingSpinner from '../components/UIElements/LoadingSpinner';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../components/utils/validators'\nimport { useForm } from '../components/hooks/form-hook';\nimport { AuthContext } from '../components/context/auth-context';\nimport ImageUpload from '../components/FormElements/ImageUpload';\nimport './Auth.css';\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [formState, inputHandler, setFormData] = useForm({\n        email: {\n            value: '',\n            isValid: false\n        },\n        password: {\n            value: '',\n            isValid: false\n        }\n\n    }, false);\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: undefined,\n                    image: undefined\n                },\n                formState.inputs.email.isValid && formState.inputs.password.isValid);\n        } else {\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: {\n                        value: '',\n                        isValid: false\n                    },\n                    image: {\n                        value: null,\n                        isValid: false\n                    }\n                },\n                false\n            );\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmitHandler = async (event) => {\n        event.preventDefault();\n        setIsLoading(true);\n\n        if (isLoginMode) {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users/login`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    })\n                });\n\n                const responseData = await response.json();\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setIsLoading(false);\n                auth.login(responseData.userId, responseData.token);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message || 'Something went wrong, try again.')\n            }\n\n        } else {\n            try {\n                const formData = new FormData();\n                formData.append('email', formState.inputs.email.value)\n                formData.append('name', formState.inputs.name.value)\n                formData.append('password', formState.inputs.password.value)\n                formData.append('image', formState.inputs.image.value)\n\n                const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, {\n                    body: formData,\n                    method: 'POST'\n                });\n\n                const responseData = await response.json();\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setIsLoading(false);\n                auth.login(responseData.userId, responseData.token);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message || 'Something went wrong, try again.')\n            }\n        }\n    };\n\n    const errorHandler = () => {\n        setError(null);\n    }\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={errorHandler} />\n            <Card className='authentication'>\n                {isLoading && <LoadingSpinner asOverlay />}\n                <h2>Login Required</h2>\n                <hr />\n                <form onSubmit={authSubmitHandler}>\n                    {!isLoginMode && (\n                        <Input\n                            element='input'\n                            id='name'\n                            type='text'\n                            label='Enter a Username'\n                            validators={[VALIDATOR_REQUIRE()]}\n                            errorText='Enter a Username of 6 characters or longer'\n                            onInput={inputHandler}\n                        />\n                    )}\n\n                    {!isLoginMode && <ImageUpload center id={'image'} onInput={inputHandler} errorText=\"Please provide an image...\" />}\n\n                    <Input\n                        element='input'\n                        id='email'\n                        type='email'\n                        label='Email'\n                        validators={[VALIDATOR_EMAIL()]}\n                        errorText='Enter a valid email address'\n                        onInput={inputHandler}\n                    />\n\n                    <Input\n                        element='input'\n                        id='password'\n                        type='password'\n                        label='Password'\n                        validators={[VALIDATOR_MINLENGTH(6)]}\n                        errorText='Password must be at least 6 characters'\n                        onInput={inputHandler}\n                    />\n                    <Button type='submit' disabled={!formState.isValid}>\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                    </Button>\n                </form>\n                <Button inverse onClick={switchModeHandler}>\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                </Button>\n            </Card>\n        </>\n    );\n};\n\nexport default Auth;","import React, { useState, useCallback, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Users from './pages/Users';\nimport NewTrip from './pages/NewTrip';\nimport UserTrips from './pages/UserTrips'\nimport MainNav from './components/Navigation/MainNav';\nimport UpdateTrips from './pages/UpdateTrips';\nimport Auth from './pages/Auth';\nimport { AuthContext } from './components/context/auth-context';\n\n\nconst App = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n\n  const login = useCallback((userId, token) => {\n    setToken(token)\n    setUserId(userId)\n    localStorage.setItem('userData', JSON.stringify({ userId: userId, token: token }));\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null)\n    setUserId(null)\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token) {\n      login(storedData.userId, storedData.token)\n    }\n  }, [login])\n\n\n  let routes;\n\n  if (token) {\n    //Routes available if logged in\n    routes = (\n      <Switch>\n        <Route exact path=\"/\">\n          <Users />\n        </Route>\n        <Route exact path='/:userid/trips'>\n          <UserTrips />\n        </Route>\n        <Route exact path=\"/trips/new\">\n          <NewTrip />\n        </Route>\n        <Route exact path=\"/trips/:pid\">\n          <UpdateTrips />\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    //Routes available if NOT logged in\n    routes = (\n      <Switch>\n        <Route exact path=\"/\">\n          <Users />\n        </Route>\n        <Route exact path='/:userid/trips'>\n          <UserTrips />\n        </Route>\n        <Route exact path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n\n\n  return (\n    <AuthContext.Provider value={\n      {\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }\n    }>\n      <Router>\n        <MainNav />\n        <main>\n          {routes}\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}